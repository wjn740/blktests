#!/bin/bash
#
# Test if close()ing a unbound loop device is too slow
# Copyright (C) 2017 James Wang <jnwang@suse.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

DESCRIPTION="Test if close()ing a unbound loop device is too slow"

QUICK=1

run_test() {
	TIMEFORMAT='%5R'
	time {
		for ((i=0;i<200;i++)); do dd if=/dev/loop0 of=/dev/null  bs=512 count=1 >/dev/null 2>&1; done
	}
}
clean_up() {
	if lsmod | grep loop >/dev/null 2>&1; then
		if ! rmmod loop;then
			return 2;
		fi
	fi
}

prepare() {
	modprobe loop max_loop=1
}


test() {
	echo "Running ${TEST_NAME}"

	clean_up
	prepare
	SECONDS=0
	run_test >/dev/null 2>&1
	DURATION=${SECONDS}

	clean_up
	if ! clean_up; then
		echo "Test complete"
		return 2
	fi
	echo "Test complete"
	if [[ "${DURATION}" -gt 1 ]]; then
		echo "test took too long ($URATION seconds)"
		return 1
	else
		return 0
	fi
}
